@using GastroPages.Models
@model GastroPages.Models.HomeVeranstaltungsModel
<script>
    var summeGesamtOverall = 0;
    function Berechnen() {
        var checker = true;
        var counterSpeise = 0;
        var counterKategorie = 0;
        var summeGesamtSpeisen = 0;
        summeGesamtOverall = 0;
        var summePersonenKategorie = 0;
        var summeGeldKategorie = 0;

        while (checker == true) {
            var summeKategorie = 0;

            var txt = "itemsSpeisen_".concat(counterKategorie).concat("_").concat(counterSpeise);
            var txtGeld = "itemsPreis_".concat(counterKategorie).concat("_").concat(counterSpeise);

            var feld = document.getElementById(txt);
            var feldGeld = document.getElementById(txtGeld);
            if (feld == null) {
                //Nächste Iteration checken, wenn leer dann raus
                var txt2 = "itemsSpeisen_".concat(counterKategorie + 1).concat("_").concat("0");
                var feld2 = document.getElementById(txt2);
                if (feld2 == null) {
                    //Für diese Kategorie gint es keine Einträge mehr
                    //--> Die nächsten möglichen Kategorien testen
                    //Es gibt nichts mehr --> raus
                    checker = false;
                    //Falls doch, wieder rein
                    for (var i = 0; i < 4; i++) {
                        var t = "itemsSpeisen_".concat(counterKategorie + 1 + i).concat("_").concat("0");
                        var f = document.getElementById(t);
                        if (f != null) {
                            counterSpeise = -1;
                            checker = true;
                            counterKategorie = counterKategorie + i;
                            break;
                        }
                    }
                    
                    
                } else {
                    //Eine Kategorie ist beendet, Werte in die entsprechenden Felder schreiben
                    counterSpeise = -1;
                    summeGeldKategorie = 0;
                    summePersonenKategorie = 0;
                    counterKategorie++;
                }
            } else {
                //Feld existiert
                

                var wertAnzahlPersonenSpeise = feld.value != "" ? parseInt(feld.value) : 0;
                if (checkDigit(feld.value)) { wertAnzahlPersonenSpeise = 0; feld.value = 0; }
                var wertGeldSpeise = feldGeld.value != "" ? parseFloat(feldGeld.value.replace(',', '.')) : 0;
                if (isNaN(wertGeldSpeise)) { wertGeldSpeise = 0; }


                var aK = "anzahlKategorie".concat(counterKategorie);
                var sK = "summeKategorie".concat(counterKategorie);
                //Preis zu Summe Kategorie addieren
                summeGeldKategorie = summeGeldKategorie + (wertGeldSpeise * wertAnzahlPersonenSpeise);
                document.getElementById(sK).innerHTML = summeGeldKategorie.toFixed(2);
                
                summePersonenKategorie = summePersonenKategorie + wertAnzahlPersonenSpeise;
                document.getElementById(aK).innerHTML = summePersonenKategorie;

                //hidden Felder DIESER! Kategorie belegen
                var _aK = "_".concat(aK);
                var _sK = "_".concat(sK);
                document.getElementById(_aK).value = summePersonenKategorie;
                document.getElementById(_sK).value = summeGeldKategorie.toFixed(2);

                //Preis zur Gesamtsumme Speisen addieren
                var feldWertGesamtSpeisen = document.getElementById("summarySummeSpeisen");
                //var feldWertGesamtSpeisenValue = feldWertGesamtSpeisen.innerHTML != "0,00" ? parseFloat(feldWertGesamtSpeisen.innerHTML.replace(',', '.')) : 0;
                summeGesamtSpeisen = summeGesamtSpeisen + (wertGeldSpeise * wertAnzahlPersonenSpeise);
                document.getElementById("summarySummeSpeisen").innerHTML = summeGesamtSpeisen.toFixed(2);
                document.getElementById("summarySummeSpeisenValue").value = summeGesamtSpeisen.toFixed(2);

                //Preis zur Gesamtsumme Insgesamt addieren
                //var feldWertInsgesamt = document.getElementById("summarySummeInsgesamt");
                //var feldWertGesamtInsgesamtValue = feldWertInsgesamt.innerHTML != "0,00" ? parseFloat(feldWertInsgesamt.innerHTML.replace(',', '.')) : 0;
                summeGesamtOverall = summeGesamtOverall + (wertGeldSpeise * wertAnzahlPersonenSpeise);
                document.getElementById("summarySummeInsgesamt").innerHTML = summeGesamtOverall.toFixed(2);
                document.getElementById("summarySummeGesamtValue").value = summeGesamtOverall.toFixed(2);
                wertGeldSpeise = 0;

            }
            
            counterSpeise++;
        }
        summeGesamtSpeisen = 0;
        //summeGesamtOverall = 0;
        summePersonenKategorie = 0
        BerechneGetränke();
    }

    function BerechneGetränke() {
        var checker = true;
        var counterSpeise = 0;
        var counterKategorie = 0;
        var summeGesamtSpeisen = 0;
        var summePersonenKategorie = 0;
        var summeGeldKategorie = 0;

        while (checker == true) {
            var summeKategorie = 0;

            var txt = "itemsGetränke_".concat(counterKategorie).concat("_").concat(counterSpeise);
            var txtGeld = "itemsPreisG_".concat(counterKategorie).concat("_").concat(counterSpeise);

            var feld = document.getElementById(txt);
            var feldGeld = document.getElementById(txtGeld);
            if (feld == null) {
                //Nächste Iteration checken, wenn leer dann raus
                var txt2 = "itemsGetränke_".concat(counterKategorie + 1).concat("_").concat("0");
                var feld2 = document.getElementById(txt2);
                if (feld2 == null) {
                    //Für diese Kategorie gint es keine Einträge mehr
                    //--> Die nächsten möglichen Kategorien testen
                    //Es gibt nichts mehr --> raus
                    checker = false;
                    //Falls doch, wieder rein
                    for (var i = 0; i < 4; i++) {
                        var t = "itemsGetränke_".concat(counterKategorie + 1 + i).concat("_").concat("0");
                        var f = document.getElementById(t);
                        if (f != null) {
                            counterSpeise = -1;
                            checker = true;
                            counterKategorie = counterKategorie  + i;
                        }
                    }
                } else {
                    //Eine Kategorie ist beendet, Werte in die entsprechenden Felder schreiben
                    counterSpeise = -1;
                    summeGeldKategorie = 0;
                    summePersonenKategorie = 0;
                    counterKategorie++;
                }
            } else {
                //Feld existiert
                var wertAnzahlPersonenSpeise = feld.value != "" ? parseInt(feld.value) : 0;
                if (checkDigit(feld.value)) { wertAnzahlPersonenSpeise = 0; feld.value = 0; }
                var wertGeldSpeise = feldGeld.value != "" ? parseFloat(feldGeld.value.replace(',', '.')) : 0;
                if (isNaN(wertGeldSpeise)) { wertGeldSpeise = 0; }

                var aK = "anzahlKategorieGetränk".concat(counterKategorie);
                var sK = "summeKategorieGetränk".concat(counterKategorie);
                //Preis zu Summe Kategorie addieren
                summeGeldKategorie = summeGeldKategorie + (wertGeldSpeise * wertAnzahlPersonenSpeise);
                document.getElementById(sK).innerHTML = summeGeldKategorie.toFixed(2);

                summePersonenKategorie = summePersonenKategorie + wertAnzahlPersonenSpeise;
                document.getElementById(aK).innerHTML = summePersonenKategorie;

                //hidden Felder DIESER! Kategorie belegen
                var _aK = "_".concat(aK);
                var _sK = "_".concat(sK);
                document.getElementById(_aK).value = summePersonenKategorie;
                document.getElementById(_sK).value = summeGeldKategorie.toFixed(2);

                //Preis zur Gesamtsumme Speisen addieren
                var feldWertGesamtSpeisen = document.getElementById("summarySummeGetränke");
                //var feldWertGesamtSpeisenValue = feldWertGesamtSpeisen.innerHTML != "0,00" ? parseFloat(feldWertGesamtSpeisen.innerHTML.replace(',', '.')) : 0;
                summeGesamtSpeisen = summeGesamtSpeisen + (wertGeldSpeise * wertAnzahlPersonenSpeise);
                document.getElementById("summarySummeGetränke").innerHTML = summeGesamtSpeisen.toFixed(2);
                document.getElementById("summarySummeGetränkeValue").value = summeGesamtSpeisen.toFixed(2);

                //Preis zur Gesamtsumme Insgesamt addieren
                //var feldWertInsgesamt = document.getElementById("summarySummeInsgesamt");
                //var feldWertGesamtInsgesamtValue = feldWertInsgesamt.innerHTML != "0,00" ? parseFloat(feldWertInsgesamt.innerHTML.replace(',', '.')) : 0;
                summeGesamtOverall = summeGesamtOverall + (wertGeldSpeise * wertAnzahlPersonenSpeise);
                document.getElementById("summarySummeInsgesamt").innerHTML = summeGesamtOverall.toFixed(2);
                document.getElementById("summarySummeGesamtValue").value = summeGesamtOverall.toFixed(2);
                wertGeldSpeise = 0;

            }

            counterSpeise++;
        }
        summeGesamtSpeisen = 0;
        summePersonenKategorie = 0
    }

    function checkDigit(tester) {
        if (tester != '') {
            const regex = RegExp(/^\d+$/);
            if (regex.test(tester)) {
                return (false);
            } else {
                alert("@ResourcesGastro.Shared.Navi.AlertTelefon");
            }
        }
        return true;
    }

    function validateEmail(email) {
        if (email != "") {
            const regex = RegExp(/^\w+([\.-]?\w+)*@@\w+([\.-]?\w+)*(\.\w{2,3})+$/);
            if (regex.test(email)) {
                return (true);
            } else {
                alert("@ResourcesGastro.Shared.Navi.AlertMail");
            }
        }
        return (false);
    }

    function validateNumber(number) {
        if (number != "") { 
            const regex = RegExp(/^-?\d+$/);
            if (regex.test(number)) {
                return (true);
            } else {
                alert("@ResourcesGastro.Shared.Navi.AlertTelefon");
            }
        }
        return (false);
    }

    function validateName(name) {
        if (name != "") {
           return (true);
        }
        return (false);
    }

    function validateDatum(datum) {
        if (datum != "") {
            return (true);
        }
        return (false);
    }

    function validateAnzahlPersonen(anzahl) {
        if (anzahl != "") {
            return (true);
        }
        alert("@ResourcesGastro.Shared.Navi.AlertPersonenzahl");
        return (false);
    }

    function dsgvoChange() {
        var chkAnfrageSenden = document.getElementById("AnfrageAnWirt");
        var chkDsgvoOk = document.getElementById("dsgvoOk");
        var btnDrucken = document.getElementById("btnDrucken");
        var divdsgvo = document.getElementById("divdsgvo");

        var Name = document.getElementById("dsgvoName");
        var Datum = document.getElementById("dsgvoDatum");
        var Mail = document.getElementById("dsgvoMail");
        var Telefon = document.getElementById("dsgvoTelefon");

        var AnzahlPersonenInsgesamt = document.getElementById("anzahlPersonenInsgesamt");

        if (chkAnfrageSenden.checked == true) {
            divdsgvo.style.visibility = "visible"; 
            if (chkDsgvoOk.checked == true) {
                btnDrucken.disabled = false;
                if (validateEmail(Mail.value) == false) {
                    btnDrucken.disabled = true;
                    return;
                }
                if (validateNumber(Telefon.value) == false) {
                    btnDrucken.disabled = true;
                    return;
                }
                if (validateName(Name.value) == false) {
                    btnDrucken.disabled = true;
                    return;
                }
                if (validateDatum(Datum.value) == false) {
                    btnDrucken.disabled = true;
                    return;
                }
                if (validateAnzahlPersonen(AnzahlPersonenInsgesamt.value) == false) {
                    btnDrucken.disabled = true;
                    return;
                }
            } else {
                btnDrucken.disabled = true;
            }
        } else {
            divdsgvo.style.visibility = "hidden"; 
            chkDsgvoOk.checked = false;
            btnDrucken.disabled = false;
        }
    }
</script>
<h2>@ResourcesGastro.Shared.Navi.Veranstaltungsplaner</h2>
@using (Html.BeginForm("VeranstaltungSpeichern", "Home", FormMethod.Post, new { id = "EingabeForm" }))
{
<table border="0">
    <tr>
            <td class="PlanerIntro">@ResourcesGastro.Shared.Navi.PlanerBeschreibung<br /><br /></td>
    </tr>
    <tr>
        <td class="PlanerPersonen">
            <table border="0" width="580">
                <tr>
                    <td width="500" valign="top">
                        @ResourcesGastro.Shared.Navi.PlanerIntro
                        <br /><br />
                    </td>
                    <td width="80" valign="top">
                        <center>
                            <input type="text" size="3" name="anzahlPersonenInsgesamt" id="anzahlPersonenInsgesamt" onchange="dsgvoChange()" />
                        </center>
                    </td>
                </tr>
            </table>
        
        </td>
    </tr>
    <tr>
        <td class="PlanerSpeisenHeader">@ResourcesGastro.Shared.Navi.Speisen</td>
    </tr>
    <tr>
        <td class="PlanerSpeisenItems">
            @{
                int kategorieCounter = 0;

                foreach (KategorienFuerModel kat in Model.Speisen.AlleKategorien)
                {
                    string text1 = "SpeisenKategorieBezeichnung" + kat.Level;
                    string text2 = "SpeisenKategorieHeader" + kat.Level;
            <div class="MittagstischKategorie">
                <div class=@text1>@kat.Kategorie.Bezeichnung</div>
                <div class=@text2>
                    @if (kat.Kategorie.Header != null && !kat.Kategorie.Header.Equals(""))
                    {
                        string[] texte = kat.Kategorie.Header.Split('|');
                        foreach (var item in texte)
                        {
                            <center>@item</center><br />
                        }
                    }
                </div>

                @foreach (var item in Model.Speisen.AlleSpeisenZuDenKategorien.Where(x => x.Key == kat.Kategorie.id))
                {
                    int counterSpeisen = 0;
                    foreach (VeranstaltungsSpeisen mt in item.Value)
                    {
                        string txt = "itemsSpeisen_" + kategorieCounter + "_" + counterSpeisen;
                        string txt2 = "itemsPreis_" + kategorieCounter + "_" + counterSpeisen;
                        string txt3 = "itemsBezeichnung_" + kategorieCounter + "_" + counterSpeisen;
                        string txt4 = "itemsEinheit_" + kategorieCounter + "_" + counterSpeisen;

                        counterSpeisen++;
                        <div class="MittagstischElement">
                            <div class="PlanerFeld"><input type="text" class="PlanerAnzahlItem" name="@txt" id="@txt" onchange="Berechnen()" /></div>
                            <div class="KarteElementBezeichnung">
                                @{
                                    var val = "";
                                    if (Model.Speisen.AllergeneZuSpeisen.Where(x => x.Key == mt.id).Any())
                                    {
                                        val = Model.Speisen.AllergeneZuSpeisen.Where(x => x.Key == mt.id).FirstOrDefault().Value;
                                    }
                                    @mt.Bezeichnung
                                    <input type="hidden" name="@txt3" id="@txt3" value="@mt.Bezeichnung" />
                                    if (!val.Equals(""))
                                    {
                                        <text>&nbsp;<sup>@val</sup></text>
                                    }
                                }
                            </div>
                            <div class="KarteElementBeschreibung">@mt.Beschreibung &nbsp;</div>
                            <div class="PlanerEinheit">@mt.Einheit &nbsp;</div>
                            <input type="hidden" name="@txt4" id="@txt4" value="@mt.Einheit" />
                            <div class="MittagstischElementPreis">€ @mt.PreisProEinheit</div>
                            <input type="hidden" name="@txt2" id="@txt2" value="@mt.PreisProEinheit" />
                        </div>
                    }
                }

                @{
                    string anzahlKategorie = "anzahlKategorie" + kategorieCounter;
                    string summeKategorie = "summeKategorie" + kategorieCounter;
                    string bezeichnungKategorie = "bezeichnungKategorie" + kategorieCounter;

                }
                @if (!kat.SelectedKategorieHasChilds)
                {
                    <div style="clear:both" />
                    <div class="PlanerKategorieSummenPersonenText">@ResourcesGastro.Shared.Navi.Speisen/@kat.Kategorie.Bezeichnung:</div>
                    @*<input type="hidden" name="_@bezeichnungKategorie" id="_@bezeichnungKategorie" value="@kat.Kategorie.Bezeichnung" />*@
                    <div class="PlanerKategorieSummenPersonen"><label name="@anzahlKategorie" id="@anzahlKategorie">0</label></div>
                    @*<input type="hidden" name="_@anzahlKategorie" id="_@anzahlKategorie" />*@
                    <div class="PlanerKategorieSummenPreisText">@ResourcesGastro.Shared.Navi.Planersumme @kat.Kategorie.Bezeichnung:</div>
                    <div class="PlanerKategorieSummenPreis">€ <label name="@summeKategorie" id="@summeKategorie">0,00</label></div>
                    <input type="hidden" name="_@summeKategorie" id="_@summeKategorie" />
                }
                <input type="hidden" name="_@anzahlKategorie" id="_@anzahlKategorie" />
                <input type="hidden" name="_@bezeichnungKategorie" id="_@bezeichnungKategorie" value="@kat.Kategorie.Bezeichnung" />
                <div style="clear:both" />
                <div class="MittagstischKategorieFooter">
                    @if (kat.Kategorie.Footer != null && !kat.Kategorie.Footer.Equals(""))
                    {
                        string[] texte = kat.Kategorie.Footer.Split('|');
                        int counter = 0;
                        foreach (var item in texte)
                        {
                            counter++;
                            <br /><center>@item</center>
                            if (counter == texte.Length)
                            {
                                <br />
                            }

                        }
                    }

                </div>
            </div>
                    kategorieCounter++;
                }
            }
        </td>
    </tr>
    <tr>
        <td class="PlanerSpeisenHeader">@ResourcesGastro.Shared.Navi.Getränke</td>
    </tr>
    <tr>
        <td class="PlanerGetränkeItems">
            @{
                int kategorieGCounter = 0;

                foreach (KategorienFuerModel kat in Model.Getränke.AlleKategorien)
                {
                    string text1 = "SpeisenKategorieBezeichnung" + kat.Level;
                    string text2 = "SpeisenKategorieHeader" + kat.Level;
            <div class="MittagstischKategorie">
                <div class=@text1>@kat.Kategorie.Bezeichnung</div>
                <div class=@text2>
                    @if (kat.Kategorie.Header != null && !kat.Kategorie.Header.Equals(""))
                    {
                        string[] texte = kat.Kategorie.Header.Split('|');
                        foreach (var item in texte)
                        {
                            <center>@item</center><br />
                        }
                    }
                </div>

                @foreach (var item in Model.Getränke.AlleSpeisenZuDenKategorien.Where(x => x.Key == kat.Kategorie.id))
                {
                    int counterGetränke = 0;
                    foreach (VeranstaltungsGetränke mt in item.Value)
                    {
                        string txtG = "itemsGetränke_" + kategorieGCounter + "_" + counterGetränke;
                        string txtG2 = "itemsPreisG_" + kategorieGCounter + "_" + counterGetränke;
                        string txtG3 = "itemsGetränkeBezeichnung_" + kategorieGCounter + "_" + counterGetränke;
                        string txtG4 = "itemsGetränkeEinheit" + kategorieGCounter + "_" + counterGetränke;
                        counterGetränke++;
                        <div class="PlanerGetränkeElement">
                            <div class="PlanerFeldGetränk">
                                <input type="text" class="PlanerAnzahlItem" name="@txtG" id="@txtG" onchange="Berechnen()" />
                            </div>
                            <div style="float:left;">
                                <div class="PlanerElementBezeichnung">
                                    @{
                                        var val = "";
                                        if (Model.Getränke.AllergeneZuSpeisen.Where(x => x.Key == mt.id).Any())
                                        {
                                            val = Model.Getränke.AllergeneZuSpeisen.Where(x => x.Key == mt.id).FirstOrDefault().Value;
                                        }
                                        @mt.Bezeichnung
                                        <input type="hidden" name="@txtG3" id="@txtG3" value="@mt.Bezeichnung" />
                                        if (!val.Equals(""))
                                        {
                                            <text>&nbsp;<sup>@val</sup></text>
                                        }
                                    }
                                </div>
                                <br />
                                <div class="PlanerElementBeschreibung">@mt.Beschreibung</div>
                            </div>
                            <div class="PlanerEinheitGetränk">@mt.Einheit</div>
                            <input type="hidden" name="@txtG4" id="@txtG4" value="@mt.Einheit" />
                            <div class="PlanerElementPreis">€ @mt.PreisProEinheit</div>
                            <input type="hidden" name="@txtG2" id="@txtG2" value="@mt.PreisProEinheit" />
                        </div>
                    }
                }

                @{
                    string anzahlKategorie = "anzahlKategorieGetränk" + kategorieGCounter;
                    string summeKategorie = "summeKategorieGetränk" + kategorieGCounter;
                    string bezeichnungKategorie = "bezeichnungKategorieGetränk" + kategorieGCounter;
                }
                @if (!kat.SelectedKategorieHasChilds)
                {
                    <div style="clear:both" />
                    <div class="PlanerKategorieSummenPersonenText">@ResourcesGastro.Shared.Navi.Getränke/@kat.Kategorie.Bezeichnung:</div>
                    @*<input type="hidden" name="_@bezeichnungKategorie" id="_@bezeichnungKategorie" value="@kat.Kategorie.Bezeichnung" />*@
                    <div class="PlanerKategorieSummenPersonen"><label name="@anzahlKategorie" id="@anzahlKategorie">0</label></div>
                    @*<input type="hidden" name="_@anzahlKategorie" id="_@anzahlKategorie" value="0" />*@
                    <div class="PlanerKategorieSummenPreisText">@ResourcesGastro.Shared.Navi.Planersumme @kat.Kategorie.Bezeichnung:</div>
                    <div class="PlanerKategorieSummenPreis">€ <label name="@summeKategorie" id="@summeKategorie">0,00</label></div>
                    <input type="hidden" name="_@summeKategorie" id="_@summeKategorie" value="0" />
                }
                <input type="hidden" name="_@anzahlKategorie" id="_@anzahlKategorie" value="0" />
                <input type="hidden" name="_@bezeichnungKategorie" id="_@bezeichnungKategorie" value="@kat.Kategorie.Bezeichnung" />
                <div style="clear:both" />
                <div class="MittagstischKategorieFooter">
                    @if (kat.Kategorie.Footer != null && !kat.Kategorie.Footer.Equals(""))
                    {
                        string[] texte = kat.Kategorie.Footer.Split('|');
                        int counter = 0;
                        foreach (var item in texte)
                        {
                            counter++;
                            <br /><center>@item</center>
                            if (counter == texte.Length)
                            {
                                <br />
                            }

                        }
                    }

                </div>
            </div>
                    kategorieGCounter++;
                }
            }
        </td>
    </tr>
    <tr>
        <td class="jumbotron PlanerZusammenfassung">
            <div class="PlanerSummaryHeader">@ResourcesGastro.Shared.Navi.Zusammenfassung</div>
            <div class="PlanerSummarySpeisenText">@ResourcesGastro.Shared.Navi.Speisen</div>
            <div class="PlanerSummarySpeisenValue">€ <label name="summarySummeSpeisen" id="summarySummeSpeisen">0,00</label></div>
            <input type="hidden" name="summarySummeSpeisenValue" id="summarySummeSpeisenValue" value="" />
            <div class="PlanerSummarySpeisenText">@ResourcesGastro.Shared.Navi.Getränke</div>
            <div class="PlanerSummarySpeisenValue">€ <label name="summarySummeGetränke" id="summarySummeGetränke">0,00</label></div>
            <input type="hidden" name="summarySummeGetränkeValue" id="summarySummeGetränkeValue" value="" />
            <div class="PlanerSummaryGesamtText">@ResourcesGastro.Shared.Navi.Planersumme</div>
            <div class="PlanerSummaryGesamtValue"><u>€ <text name="summarySummeInsgesamt" id="summarySummeInsgesamt">0,00</text></u></div>
            <input type="hidden" name="summarySummeGesamtValue" id="summarySummeGesamtValue" value="" />
            <div style="clear:both" />
            <input type="submit" class="btn btn-default" name="btnDrucken" id="btnDrucken" value="@ResourcesGastro.Shared.Navi.BtnPdfErstellenText" />&nbsp;&nbsp;<input onchange="dsgvoChange()" type="checkbox" value="x" name="AnfrageAnWirt" id="AnfrageAnWirt" /><b> @ResourcesGastro.Shared.Navi.AnfrageWirt </b><br /><br />
            @*Hier DSGVO beachten -->
        -- Name
        -- Telefonnummer
        -- E-Mailadresse
        --Feld für Fehlermeldung wenn EIngabefehler, also Felder via JS auf Plausibilität prüfen
            *@
            <div id="divdsgvo" name="divdsgvo" class="divdsgvo">
                <table border="0" width="650">
                    <tr>
                        <td colspan="2"><input onchange="dsgvoChange()" type="checkbox" value="x" name="dsgvoOk" id="dsgvoOk" />&nbsp;@ResourcesGastro.Shared.Navi.DsvgoText</td>
                    </tr>
                    <tr>
                        <td>@ResourcesGastro.Shared.Navi.PlanerPdfTermin:</td>
                        <td><input type="text" onchange="dsgvoChange()" name="dsgvoDatum" id="dsgvoDatum" class="dsgvoDatum" /></td>
                    </tr>
                    <tr>
                        <td>@ResourcesGastro.Shared.Navi.PlanerPdfName:</td>
                        <td><input type="text" onchange="dsgvoChange()" name="dsgvoName" id="dsgvoName" class="dsgvoName" /></td>
                    </tr>
                    <tr>
                        <td>@ResourcesGastro.Shared.Navi.Email</td>
                        <td><input type="text" onchange="dsgvoChange()" name="dsgvoMail" id="dsgvoMail" class="dsgvoMail" /></td>
                    </tr>
                    <tr>
                        <td>@ResourcesGastro.Shared.Navi.PlanerPdfTelefon:</td>
                        <td><input type="text" onchange="dsgvoChange()" name="dsgvoTelefon" id="dsgvoTelefon" class="dsgvoTelefon" /></td>
                    </tr>
                </table>
            </div>

        </td>
    </tr>
</table>
}
